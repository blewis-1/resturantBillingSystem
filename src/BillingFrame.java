
import javax.swing.AbstractButton;
import javax.swing.JCheckBox;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author israe
 */
public class BillingFrame extends javax.swing.JFrame {

    /**
     * Creates new form BillingFrame
     */
    public BillingFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel17 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        breakfastComboCK = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        fruitMorningCk = new javax.swing.JCheckBox();
        designOmelettesCk = new javax.swing.JCheckBox();
        fluffyCk = new javax.swing.JCheckBox();
        wWaffles = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bComboQTY = new javax.swing.JSpinner();
        fMorningQTY = new javax.swing.JSpinner();
        dOmeleteQTY = new javax.swing.JSpinner();
        fPancakesQTY = new javax.swing.JSpinner();
        wWafflesQty = new javax.swing.JSpinner();
        beverageComboBox1 = new javax.swing.JComboBox<>();
        beverageQty = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        fishCBox = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        chickenCBox = new javax.swing.JCheckBox();
        goatMeatCBox = new javax.swing.JCheckBox();
        cassavaCBox = new javax.swing.JCheckBox();
        katogoCBox = new javax.swing.JCheckBox();
        lunchAltCBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fishQty = new javax.swing.JSpinner();
        chickenQty = new javax.swing.JSpinner();
        goatMeatQty = new javax.swing.JSpinner();
        cassavaQty = new javax.swing.JSpinner();
        katogoQty = new javax.swing.JSpinner();
        lunchAltQty = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        matookeCBox = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        beansCBox = new javax.swing.JCheckBox();
        yamsCBox = new javax.swing.JCheckBox();
        kivuuvCBox = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        muttonRad = new javax.swing.JRadioButton();
        passionJuiceRad = new javax.swing.JRadioButton();
        waterRad = new javax.swing.JRadioButton();
        beansQty = new javax.swing.JSpinner();
        matookeQty = new javax.swing.JSpinner();
        yamsQty = new javax.swing.JSpinner();
        kivuuvCBoxQty = new javax.swing.JSpinner();
        muttonRadQty = new javax.swing.JSpinner();
        passionJuiceRadQty = new javax.swing.JSpinner();
        waterRadValueQty = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        muffinsCBox = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        croissantsCBox = new javax.swing.JCheckBox();
        bitsBitesCBox = new javax.swing.JCheckBox();
        pastaCBox = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        chipsRad = new javax.swing.JRadioButton();
        curriesRad = new javax.swing.JRadioButton();
        pizzaRad = new javax.swing.JRadioButton();
        passionJuiceRad1 = new javax.swing.JRadioButton();
        waterRad1 = new javax.swing.JRadioButton();
        muffinsQty = new javax.swing.JSpinner();
        croissantsQty = new javax.swing.JSpinner();
        bitsBitesQty = new javax.swing.JSpinner();
        pastaQty = new javax.swing.JSpinner();
        curriesQty = new javax.swing.JSpinner();
        chipsQty = new javax.swing.JSpinner();
        pizzaQty = new javax.swing.JSpinner();
        passionJuiceQty1 = new javax.swing.JSpinner();
        waterQty = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        panCakeCBox = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        cupCakeCBox = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        chispRad = new javax.swing.JRadioButton();
        fCassavaRad = new javax.swing.JRadioButton();
        pancakeQty = new javax.swing.JSpinner();
        cupCakeQty = new javax.swing.JSpinner();
        fCassavaQty = new javax.swing.JSpinner();
        chispRadQty = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        recieptArea = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        totalBillPrint = new javax.swing.JTextField();
        calculateBill = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        placeOder = new javax.swing.JButton();
        pack = new javax.swing.JCheckBox();

        jLabel17.setText("jLabel17");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Billing");
        setBackground(new java.awt.Color(204, 255, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("MABEL RESTURANT ");

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        breakfastComboCK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        breakfastComboCK.setText(" BREAKFAST COMBOS @ 15,000 per combo ");
        breakfastComboCK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakfastComboCKActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Breakfast Menu");

        fruitMorningCk.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fruitMorningCk.setText(" FRUITFUL MORNINGS @ 20,000 per combo");
        fruitMorningCk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fruitMorningCkActionPerformed(evt);
            }
        });

        designOmelettesCk.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        designOmelettesCk.setText("DESIGNER OMELETTES @ 5,000 per combo");
        designOmelettesCk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designOmelettesCkActionPerformed(evt);
            }
        });

        fluffyCk.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fluffyCk.setText(" FLUFFY PANCAKES @ 8,000 per combo");
        fluffyCk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fluffyCkActionPerformed(evt);
            }
        });

        wWaffles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wWaffles.setText("WONDERFUL WAFFLES @ 7,500 per combo ");
        wWaffles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wWafflesActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("SELECT  HOT BEVERAGE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("QTY");

        bComboQTY.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bComboQTY.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        fMorningQTY.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fMorningQTY.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        dOmeleteQTY.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dOmeleteQTY.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        fPancakesQTY.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fPancakesQTY.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        wWafflesQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        wWafflesQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        beverageComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        beverageComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MILK TEA @ 3000 per cup", "COFFEE @ 2OOO per cup" }));
        beverageComboBox1.setSelectedIndex(-1
        );
        beverageComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beverageComboBox1ActionPerformed(evt);
            }
        });

        beverageQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        beverageQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(designOmelettesCk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addComponent(fluffyCk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fruitMorningCk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(breakfastComboCK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(wWaffles, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                    .addComponent(beverageComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(203, 203, 203))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fMorningQTY, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(dOmeleteQTY, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(fPancakesQTY, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(wWafflesQty, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(beverageQty, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(bComboQTY))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(breakfastComboCK)
                    .addComponent(bComboQTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fruitMorningCk)
                    .addComponent(fMorningQTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(designOmelettesCk, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dOmeleteQTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fluffyCk)
                    .addComponent(fPancakesQTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wWaffles)
                    .addComponent(wWafflesQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beverageQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beverageComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Breakfast", jPanel1);

        fishCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fishCBox.setText("FISH @ 25,000 per plate");
        fishCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fishCBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Lunch Menu");

        chickenCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chickenCBox.setText("CHICKEN @ 20,000 per plate");
        chickenCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickenCBoxActionPerformed(evt);
            }
        });

        goatMeatCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        goatMeatCBox.setText("GOAT MEAT @ 23,000 per plate");
        goatMeatCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goatMeatCBoxActionPerformed(evt);
            }
        });

        cassavaCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cassavaCBox.setText("CASSAVA @ 7,000 per plate ");
        cassavaCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cassavaCBoxActionPerformed(evt);
            }
        });

        katogoCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        katogoCBox.setText("KATOGO @ 4,OOO per cup");
        katogoCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                katogoCBoxActionPerformed(evt);
            }
        });

        lunchAltCBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lunchAltCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KIGERE @8500 per plate", "EKYENDA @ 3000 per cup", "PASSION JUICE @ 6000 per glass", "WATER @ 2500 per glass" }));
        lunchAltCBox.setSelectedIndex(-1);
        lunchAltCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lunchAltCBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("PICK ONE");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("QTY");

        fishQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fishQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        chickenQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chickenQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        goatMeatQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        goatMeatQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        cassavaQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cassavaQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        katogoQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        katogoQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        lunchAltQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lunchAltQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(goatMeatCBox, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addComponent(cassavaCBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chickenCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fishCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(katogoCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lunchAltCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cassavaQty)
                    .addComponent(katogoQty)
                    .addComponent(lunchAltQty)
                    .addComponent(chickenQty)
                    .addComponent(goatMeatQty)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(fishQty, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(175, 175, 175))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fishCBox)
                    .addComponent(fishQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chickenCBox)
                    .addComponent(chickenQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goatMeatCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goatMeatQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cassavaCBox)
                    .addComponent(cassavaQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(katogoCBox)
                    .addComponent(katogoQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lunchAltCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lunchAltQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jTabbedPane1.addTab("Lunch", jPanel2);

        matookeCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        matookeCBox.setText(" MATOOKE @ 35,000 per plate");
        matookeCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matookeCBoxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Dinner Menu");

        beansCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        beansCBox.setText("BEAN SOUP @ 9,000 per plate");
        beansCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beansCBoxActionPerformed(evt);
            }
        });

        yamsCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yamsCBox.setText("YAMS @ 7,000 per plate ");
        yamsCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yamsCBoxActionPerformed(evt);
            }
        });

        kivuuvCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        kivuuvCBox.setText(" KIVUUVU @8,500 per plate ");
        kivuuvCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kivuuvCBoxActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("PICK BELOW TWO ITEMS");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("QTY");

        muttonRad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        muttonRad.setText(" MUTTON @ 23,000 per plate");
        muttonRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muttonRadActionPerformed(evt);
            }
        });

        passionJuiceRad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passionJuiceRad.setText(" PASSION JUICE @ 6,000 per glass");
        passionJuiceRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passionJuiceRadActionPerformed(evt);
            }
        });

        waterRad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        waterRad.setText("WATER @ 2,500 per glass");
        waterRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterRadActionPerformed(evt);
            }
        });

        beansQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        beansQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        matookeQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        matookeQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        yamsQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        yamsQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        kivuuvCBoxQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        kivuuvCBoxQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        muttonRadQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        muttonRadQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        passionJuiceRadQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passionJuiceRadQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        waterRadValueQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        waterRadValueQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yamsCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(beansCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(matookeCBox, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(203, 203, 203))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(matookeQty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .addComponent(beansQty, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yamsQty, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(muttonRadQty)
                                    .addComponent(passionJuiceRadQty)
                                    .addComponent(waterRadValueQty))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(kivuuvCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(kivuuvCBoxQty, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(muttonRad)
                            .addComponent(passionJuiceRad)
                            .addComponent(waterRad, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10))
                .addGap(10, 10, 10)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matookeCBox)
                    .addComponent(matookeQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beansCBox)
                    .addComponent(beansQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yamsCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yamsQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kivuuvCBox)
                    .addComponent(kivuuvCBoxQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(muttonRad)
                    .addComponent(muttonRadQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passionJuiceRad)
                    .addComponent(passionJuiceRadQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(waterRad)
                    .addComponent(waterRadValueQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 503, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dinner", jPanel3);

        muffinsCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        muffinsCBox.setText(" MUFFINS @ 13,000 per combo");
        muffinsCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muffinsCBoxActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("EVENING TEA");

        croissantsCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        croissantsCBox.setText("CROISSANTS @ 21,000 per combo");
        croissantsCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                croissantsCBoxActionPerformed(evt);
            }
        });

        bitsBitesCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bitsBitesCBox.setText(" BITS & BITES @ 7,000 per combo ");
        bitsBitesCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bitsBitesCBoxActionPerformed(evt);
            }
        });

        pastaCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pastaCBox.setText("PASTA @ 7,500 per combo");
        pastaCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastaCBoxActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("CHOOSE ANY THREE");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("QTY");

        chipsRad.setText("CHIPS @ 6,000 per combo");
        chipsRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chipsRadActionPerformed(evt);
            }
        });

        curriesRad.setText(" CURRIES @ 2,OOO per combo");
        curriesRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curriesRadActionPerformed(evt);
            }
        });

        pizzaRad.setText(" PIZZA @ 3,000 per combo ");
        pizzaRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pizzaRadActionPerformed(evt);
            }
        });

        passionJuiceRad1.setText(" PASSION JUICE @ 6,000 per glass ");
        passionJuiceRad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passionJuiceRad1ActionPerformed(evt);
            }
        });

        waterRad1.setText(" WATER @ 2,500 per glass");
        waterRad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterRad1ActionPerformed(evt);
            }
        });

        muffinsQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        muffinsQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        croissantsQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        croissantsQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        bitsBitesQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bitsBitesQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        pastaQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pastaQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        curriesQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        curriesQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        chipsQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chipsQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        pizzaQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pizzaQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        passionJuiceQty1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passionJuiceQty1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        waterQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        waterQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bitsBitesCBox, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addComponent(pastaCBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(croissantsCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(muffinsCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(chipsRad)
                    .addComponent(curriesRad)
                    .addComponent(waterRad1)
                    .addComponent(passionJuiceRad1)
                    .addComponent(pizzaRad))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13)
                    .addComponent(croissantsQty, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(bitsBitesQty, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(pastaQty, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(curriesQty, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(chipsQty, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(pizzaQty, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(passionJuiceQty1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(waterQty, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(muffinsQty))
                .addGap(180, 180, 180))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13))
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(muffinsCBox)
                    .addComponent(muffinsQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(croissantsCBox)
                    .addComponent(croissantsQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bitsBitesCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bitsBitesQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pastaCBox)
                    .addComponent(pastaQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chipsRad)
                    .addComponent(chipsQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(curriesRad)
                    .addComponent(curriesQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pizzaRad)
                    .addComponent(pizzaQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passionJuiceRad1)
                    .addComponent(passionJuiceQty1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(waterRad1)
                    .addComponent(waterQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Evening Tea", jPanel4);

        panCakeCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panCakeCBox.setText(" PAN CAKES @ 5,000 per plate");
        panCakeCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panCakeCBoxActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("DESSERT");

        cupCakeCBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cupCakeCBox.setText("CUPCAKES @ 3,000 per plate");
        cupCakeCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cupCakeCBoxActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("CHOOSE ONE");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("QTY");

        chispRad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chispRad.setText("CRISPS @ 2,000 per plate");
        chispRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chispRadActionPerformed(evt);
            }
        });

        fCassavaRad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fCassavaRad.setText("FRIED CASSAVA @ 7,000 per plate");
        fCassavaRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fCassavaRadActionPerformed(evt);
            }
        });

        pancakeQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pancakeQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        cupCakeQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cupCakeQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        fCassavaQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fCassavaQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        chispRadQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chispRadQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(cupCakeCBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panCakeCBox, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(jLabel16)
                                .addGap(203, 203, 203))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(fCassavaQty, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .addComponent(chispRadQty, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .addComponent(cupCakeQty, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pancakeQty, javax.swing.GroupLayout.Alignment.LEADING))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fCassavaRad)
                            .addComponent(chispRad))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(panCakeCBox)
                    .addComponent(pancakeQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cupCakeCBox)
                    .addComponent(cupCakeQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chispRad)
                    .addComponent(chispRadQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fCassavaRad)
                    .addComponent(fCassavaQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(223, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dessert", jPanel5);

        recieptArea.setEditable(false);
        recieptArea.setColumns(20);
        recieptArea.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        recieptArea.setRows(5);
        jScrollPane2.setViewportView(recieptArea);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("TOTAL BILL");

        totalBillPrint.setEditable(false);
        totalBillPrint.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        totalBillPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalBillPrintActionPerformed(evt);
            }
        });

        calculateBill.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        calculateBill.setText("CALCULATE BILL");
        calculateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(totalBillPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(calculateBill)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalBillPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(calculateBill))))
        );

        reset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        exitbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exitbtn.setText("Exit");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });

        placeOder.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        placeOder.setText("Order");
        placeOder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOderActionPerformed(evt);
            }
        });

        pack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pack.setText("PACK @  5000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(374, 374, 374))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(475, 475, 475)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(pack)
                        .addGap(18, 18, 18)
                        .addComponent(placeOder, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitbtn)
                    .addComponent(placeOder)
                    .addComponent(reset)
                    .addComponent(pack))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void breakfastComboCKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakfastComboCKActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_breakfastComboCKActionPerformed

    private void fruitMorningCkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fruitMorningCkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fruitMorningCkActionPerformed

    private void designOmelettesCkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designOmelettesCkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_designOmelettesCkActionPerformed

    private void fluffyCkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fluffyCkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fluffyCkActionPerformed

    private void wWafflesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wWafflesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wWafflesActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        
        recieptArea.setText("     **********ORDERS *****************    \n \n"
                + " MENU ------------------------------------------------- QTY \n");
        breakfastComboCK.setSelected(false);
        fruitMorningCk.setSelected(false);
        designOmelettesCk.setSelected(false);
        fluffyCk.setSelected(false);
        wWaffles.setSelected(false);

        bComboQTY.setValue(1);
        fMorningQTY.setValue(1);
        dOmeleteQTY.setValue(1);
        fPancakesQTY.setValue(1);
        wWafflesQty.setValue(1);
        beverageQty.setValue(1);
        beverageComboBox1.setSelectedIndex(-1);

//        LUNCH
        fishCBox.setSelected(false);
        chickenCBox.setSelected(false);
        goatMeatCBox.setSelected(false);
        cassavaCBox.setSelected(false);
        katogoCBox.setSelected(false);
        lunchAltCBox.setSelectedIndex(-1);

        fishQty.setValue(1);
        chickenQty.setValue(1);
        goatMeatQty.setValue(1);
        cassavaQty.setValue(1);
        katogoQty.setValue(1);
        lunchAltQty.setValue(1);

//        Dinner
        matookeCBox.setSelected(false);
        beansCBox.setSelected(false);
        yamsCBox.setSelected(false);
        kivuuvCBox.setSelected(false);

        kivuuvCBoxQty.setValue(1);
        yamsQty.setValue(1);
        beansQty.setValue(1);
        matookeQty.setValue(1);

        muttonRad.setSelected(false);
        passionJuiceRad.setSelected(false);
        waterRad.setSelected(false);

//      Evening Tea
        muffinsCBox.setSelected(false);
        croissantsCBox.setSelected(false);
        bitsBitesCBox.setSelected(false);
        pastaCBox.setSelected(false);
        chipsRad.setSelected(false);
        curriesRad.setSelected(false);
        pizzaRad.setSelected(false);
        passionJuiceRad1.setSelected(false);
        waterRad1.setSelected(false);

        muffinsQty.setValue(1);
        croissantsQty.setValue(1);
        bitsBitesQty.setValue(1);
        pastaQty.setValue(1);
        chipsQty.setValue(1);
        curriesQty.setValue(1);
        pizzaQty.setValue(1);
        passionJuiceQty1.setValue(1);
        waterQty.setValue(1);

        //DESSERT
        panCakeCBox.setSelected(false);
        cupCakeCBox.setSelected(false);
        fCassavaRad.setSelected(false);
        chispRad.setSelected(false);

        pancakeQty.setValue(1);
        cupCakeQty.setValue(1);
        fCassavaQty.setValue(1);
        chispRadQty.setValue(1);
        
        pack.setSelected(false);

        totalBillPrint.setText("");
    }//GEN-LAST:event_resetActionPerformed

    int bComboValue;
    int fMorningValue;
    int dOmeleteValue;
    int fPancakesValue;
    int wWafflesValue;
    int beverageValue;
//    Lunch 
    int fishCBoxValue;
    int chickenCBoxValue;
    int goatMeatCBoxValue;
    int cassavaCBoxValue;
    int katogoCBoxValue;
    int lunchAltQtyValue;
//Dinner
    int matookeCBoxValue;
    int beansCBoxValue;
    int yamsCBoxValue;
    int kivuuvCBoxValue;
    int muttonRadValue;
    int passionJuiceRadValue;
    int waterRadValue;
//    Evening Tea
    int muffinsCBoxValue;
    int croissantsCBoxValue;
    int bitsBitesCBoxValue;
    int pastaCBoxValue;
    int chipsRadValue;
    int curriesRadValue;
    int pizzaRadValue;
    int passionJuiceValue;
    int waterRad1Value;

    //Dessert
    int pancakeValue;
    int cupCakeValue;
    int fCassavaValue;
    int chispRadValue;


    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitbtnActionPerformed

    private void fishCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fishCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fishCBoxActionPerformed

    private void chickenCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickenCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chickenCBoxActionPerformed

    private void goatMeatCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goatMeatCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goatMeatCBoxActionPerformed

    private void cassavaCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cassavaCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cassavaCBoxActionPerformed

    private void katogoCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_katogoCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_katogoCBoxActionPerformed

    private void lunchAltCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lunchAltCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lunchAltCBoxActionPerformed

    private void matookeCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matookeCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matookeCBoxActionPerformed

    private void beansCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beansCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beansCBoxActionPerformed

    private void yamsCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yamsCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yamsCBoxActionPerformed

    private void kivuuvCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kivuuvCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kivuuvCBoxActionPerformed

    private void muffinsCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muffinsCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_muffinsCBoxActionPerformed

    private void croissantsCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_croissantsCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_croissantsCBoxActionPerformed

    private void bitsBitesCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bitsBitesCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bitsBitesCBoxActionPerformed

    private void pastaCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastaCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pastaCBoxActionPerformed

    private void panCakeCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panCakeCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_panCakeCBoxActionPerformed

    private void cupCakeCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cupCakeCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cupCakeCBoxActionPerformed

    private void calculateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBillActionPerformed
        // TODO add your handling code here:

        int totalBill = 0;
//        BreakFast
        String billText;
        int breakfastComboPrice = 15000;
        int fMorningPrice = 20000;
        int designOmelettesPrice = 5000;
        int fluffyPancakesPrice = 8000;
        int wWafflesPrice = 7500;
        int milkTeaPrice = 3000;
        int coffePrice = 2000;

//        Lunch
        int fishPrice = 25000;
        int chickenPrice = 20000;
        int goatMeatPrice = 23000;
        int cassavaPrice = 7000;
        int kigerePrice = 8500;
        int ekyendaPrice = 3000;
        int katogoPrice = 4000;
        int passionJuicePrice = 6000;
        int waterPrice = 2500;

//        Dinner 
        int matookeCBoxPrice = 35000;
        int beansCBoxPrice = 9000;
        int yamsCBoxPrice = 7000;
        int kivuuvCBoxPrice = 8500;
        int muttonRadPrice = 23000;
        int passionJuiceRadPrice = 6000;
        int waterRadPrice = 2500;

//        Evening Tea
        int muffinsCBoxPrice = 13000;
        int croissantsCBoxPrice = 21000;
        int chipsRadPrice = 6000;
        int bitsBitesCBoxPrice = 7000;
        int pastaCBoxPrice = 7500;
        int pizzaRadPrice = 3000;
        int curriesRadPrice = 2000;
        int passionJuiceRad1Price = 6000;
        int waterRad1Price = 2500;

//        Dessert
        int panCakeCBoxPrice = 5000;
        int cupCakeCBoxPrice = 3000;
        int chispRadPrice = 2000;
        int fCassavaRadPrice = 7000;

        int packPrice = 5000;

//        if(!" ".equals(recieptArea.getText())) {
//            
//        } 
        if (breakfastComboCK.isSelected()) {
            totalBill = totalBill + (breakfastComboPrice * bComboValue);
        }
        if (fruitMorningCk.isSelected()) {
            totalBill = totalBill + (fMorningPrice * fMorningValue);
        }
        if (designOmelettesCk.isSelected()) {
            totalBill = totalBill + (designOmelettesPrice * dOmeleteValue);
        }
        if (fluffyCk.isSelected()) {
            totalBill = totalBill + (fluffyPancakesPrice * fPancakesValue);
        }
        if (wWaffles.isSelected()) {
            totalBill = totalBill + (wWafflesPrice * wWafflesValue);
        }
        if ((beverageComboBox1.getSelectedIndex() > -1)) {

            if (beverageComboBox1.getSelectedIndex() == 0) {
                totalBill = totalBill + (milkTeaPrice * beverageValue);
            }
            if (beverageComboBox1.getSelectedIndex() == 1) {
                totalBill = totalBill + (coffePrice * beverageValue);
            }
        }

//        Lunch 
        if (fishCBox.isSelected()) {
            totalBill = totalBill + (fishPrice * fishCBoxValue);
        }
        if (chickenCBox.isSelected()) {
            totalBill = totalBill + (chickenPrice * chickenCBoxValue);
        }
        if (goatMeatCBox.isSelected()) {
            totalBill = totalBill + (goatMeatPrice * goatMeatCBoxValue);
        }

        if (cassavaCBox.isSelected()) {
            totalBill = totalBill + (cassavaPrice * cassavaCBoxValue);
        }
        if (katogoCBox.isSelected()) {
            totalBill = totalBill + (katogoPrice * katogoCBoxValue);
        }
        if ((lunchAltCBox.getSelectedIndex() > -1)) {

            if (lunchAltCBox.getSelectedIndex() == 0) {
                totalBill = totalBill + (kigerePrice * lunchAltQtyValue);
            }
            if (lunchAltCBox.getSelectedIndex() == 1) {
                totalBill = totalBill + (ekyendaPrice * lunchAltQtyValue);
            }
            if (lunchAltCBox.getSelectedIndex() == 2) {
                totalBill = totalBill + (passionJuicePrice * lunchAltQtyValue);
            }
            if (lunchAltCBox.getSelectedIndex() == 3) {
                totalBill = totalBill + (waterPrice * lunchAltQtyValue);
            }
        }
//        Dinner
        if (matookeCBox.isSelected()) {
            totalBill = totalBill + (matookeCBoxPrice * matookeCBoxValue);
        }
        if (beansCBox.isSelected()) {
            totalBill = totalBill + (beansCBoxPrice * beansCBoxValue);
        }
        if (yamsCBox.isSelected()) {
            totalBill = totalBill + (yamsCBoxPrice * yamsCBoxValue);
        }
        if (kivuuvCBox.isSelected()) {
            totalBill = totalBill + (kivuuvCBoxPrice * kivuuvCBoxValue);
        }
        if (muttonRad.isSelected()) {
            totalBill = totalBill + (muttonRadPrice * muttonRadValue);
        }
        if (passionJuiceRad.isSelected()) {
            totalBill = totalBill + (passionJuiceRadPrice * passionJuiceRadValue);
        }
        if (waterRad.isSelected()) {
            totalBill = totalBill + (waterRadPrice * waterRadValue);
        }
//     Evening Tea
        if (muffinsCBox.isSelected()) {
            totalBill = totalBill + (muffinsCBoxPrice * muffinsCBoxValue);
        }
        if (croissantsCBox.isSelected()) {
            totalBill = totalBill + (croissantsCBoxPrice * croissantsCBoxValue);
        }
        if (chipsRad.isSelected()) {
            totalBill = totalBill + (chipsRadPrice * chipsRadValue);
        }
        if (bitsBitesCBox.isSelected()) {
            totalBill = totalBill + (bitsBitesCBoxPrice * bitsBitesCBoxValue);
        }
        if (pastaCBox.isSelected()) {
            totalBill = totalBill + (pastaCBoxPrice * pastaCBoxValue);
        }
        if (pizzaRad.isSelected()) {
            totalBill = totalBill + (pizzaRadPrice * pizzaRadValue);
        }
        if (curriesRad.isSelected()) {
            totalBill = totalBill + (curriesRadPrice * curriesRadValue);
        }
        if (passionJuiceRad1.isSelected()) {
            totalBill = totalBill + (passionJuiceRad1Price * passionJuiceValue);
        }
        if (passionJuiceRad1.isSelected()) {
            totalBill = totalBill + (passionJuiceRad1Price * passionJuiceValue);
        }
        if (waterRad1.isSelected()) {
            totalBill = totalBill + (waterRad1Price * waterRad1Value);
        }

//        Dessert 
        if (cupCakeCBox.isSelected()) {
            totalBill = totalBill + (cupCakeCBoxPrice * cupCakeValue);
        }

        if (panCakeCBox.isSelected()) {
            totalBill = totalBill + (panCakeCBoxPrice * pancakeValue);
        }

        if (chispRad.isSelected()) {
            totalBill = totalBill + (chispRadPrice * chispRadValue);
        }

        if (fCassavaRad.isSelected()) {
            totalBill = totalBill + (fCassavaRadPrice * fCassavaValue);
        }

        if (pack.isSelected()) {
            totalBill = totalBill + packPrice;
        }

        billText = Integer.toString(totalBill);
        totalBillPrint.setText(billText + "  Ush");


    }//GEN-LAST:event_calculateBillActionPerformed

    private void beverageComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beverageComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beverageComboBox1ActionPerformed

    private void muttonRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muttonRadActionPerformed
        // TODO add your handling code here:
        if (waterRad.isSelected() & passionJuiceRad.isSelected()) {
            muttonRad.setSelected(false);
        }
    }//GEN-LAST:event_muttonRadActionPerformed

    private void passionJuiceRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passionJuiceRadActionPerformed
        // TODO add your handling code here:
        if (waterRad.isSelected() & muttonRad.isSelected()) {
            passionJuiceRad.setSelected(false);
        }

    }//GEN-LAST:event_passionJuiceRadActionPerformed

    private void chipsRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chipsRadActionPerformed
        if (curriesRad.isSelected() && pizzaRad.isSelected() && passionJuiceRad1.isSelected()) {
            chipsRad.setSelected(false);
        }
        if (waterRad1.isSelected() && pizzaRad.isSelected() && passionJuiceRad1.isSelected()) {
            chipsRad.setSelected(false);
        }
        if (waterRad1.isSelected() && curriesRad.isSelected() && passionJuiceRad1.isSelected()) {
            chipsRad.setSelected(false);
        }
        if (waterRad1.isSelected() && curriesRad.isSelected() && pizzaRad.isSelected()) {
            chipsRad.setSelected(false);
        }
    }//GEN-LAST:event_chipsRadActionPerformed

    private void curriesRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curriesRadActionPerformed
        if (chipsRad.isSelected() && pizzaRad.isSelected() && passionJuiceRad1.isSelected()) {
            curriesRad.setSelected(false);
        }
        if (waterRad1.isSelected() && pizzaRad.isSelected() && passionJuiceRad1.isSelected()) {
            curriesRad.setSelected(false);
        }
        if (waterRad1.isSelected() && chipsRad.isSelected() && passionJuiceRad1.isSelected()) {
            curriesRad.setSelected(false);
        }
        if (pizzaRad.isSelected() && chipsRad.isSelected() && waterRad1.isSelected()) {
            curriesRad.setSelected(false);
        }
    }//GEN-LAST:event_curriesRadActionPerformed

    private void pizzaRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pizzaRadActionPerformed
        if (chipsRad.isSelected() && curriesRad.isSelected() && passionJuiceRad1.isSelected()) {
            pizzaRad.setSelected(false);
        }
        if (chipsRad.isSelected() && curriesRad.isSelected() && waterRad1.isSelected()) {
            pizzaRad.setSelected(false);
        }
        if (chipsRad.isSelected() && passionJuiceRad1.isSelected() && waterRad1.isSelected()) {
            pizzaRad.setSelected(false);
        }
        if (passionJuiceRad1.isSelected() && curriesRad.isSelected() && waterRad1.isSelected()) {
            pizzaRad.setSelected(false);
        }
    }//GEN-LAST:event_pizzaRadActionPerformed

    private void passionJuiceRad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passionJuiceRad1ActionPerformed
        if (chipsRad.isSelected() && curriesRad.isSelected() && pizzaRad.isSelected()) {
            passionJuiceRad1.setSelected(false);
        }
        if (chipsRad.isSelected() && curriesRad.isSelected() && waterRad1.isSelected()) {
            passionJuiceRad1.setSelected(false);
        }
        if (chipsRad.isSelected() && pizzaRad.isSelected() && waterRad1.isSelected()) {
            passionJuiceRad1.setSelected(false);
        }
        if (curriesRad.isSelected() && pizzaRad.isSelected() && waterRad1.isSelected()) {
            passionJuiceRad1.setSelected(false);
        }

    }//GEN-LAST:event_passionJuiceRad1ActionPerformed

    private void waterRad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterRad1ActionPerformed
        if (chipsRad.isSelected() && curriesRad.isSelected() && pizzaRad.isSelected()) {
            waterRad1.setSelected(false);
        }
        if (chipsRad.isSelected() && curriesRad.isSelected() && passionJuiceRad1.isSelected()) {
            waterRad1.setSelected(false);
        }
        if (pizzaRad.isSelected() && curriesRad.isSelected() && passionJuiceRad1.isSelected()) {
            waterRad1.setSelected(false);
        }
        if (chipsRad.isSelected() && curriesRad.isSelected() && passionJuiceRad1.isSelected()) {
            waterRad1.setSelected(false);
        }
        if (chipsRad.isSelected() && pizzaRad.isSelected() && passionJuiceRad1.isSelected()) {
            waterRad1.setSelected(false);
        }
    }//GEN-LAST:event_waterRad1ActionPerformed

    private void chispRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chispRadActionPerformed
        // TODO add your handling code here:
        if (chispRad.isSelected()) {
            fCassavaRad.setSelected(false);
        }

    }//GEN-LAST:event_chispRadActionPerformed

    private void fCassavaRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fCassavaRadActionPerformed
        // TODO add your handling code here:
        if (fCassavaRad.isSelected())
            chispRad.setSelected(false);
    }//GEN-LAST:event_fCassavaRadActionPerformed

    private void waterRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterRadActionPerformed
        if (passionJuiceRad.isSelected() & muttonRad.isSelected()) {
            waterRad.setSelected(false);
        }
    }//GEN-LAST:event_waterRadActionPerformed

    private void totalBillPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalBillPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalBillPrintActionPerformed

    private void placeOderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOderActionPerformed

        recieptArea.setText("     **********ORDERS *****************    \n \n"
            + " MENU ------------------------------------------------- QTY \n");
        if (breakfastComboCK.isSelected()) {
            bComboValue = (Integer) bComboQTY.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + breakfastComboCK.getText() + " ----- " + bComboValue + "\n");
        }
        if (fruitMorningCk.isSelected()) {
            fMorningValue = (Integer) fMorningQTY.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + fruitMorningCk.getText() + " ----- " + fMorningValue + "\n");
        }
        if (designOmelettesCk.isSelected()) {
            dOmeleteValue = (Integer) dOmeleteQTY.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + designOmelettesCk.getText() + " ----- " + dOmeleteValue + "\n");
        }
        if (fluffyCk.isSelected()) {
            fPancakesValue = (Integer) fPancakesQTY.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + fluffyCk.getText() + " ---------- " + fPancakesValue + "\n");
        }
        if (wWaffles.isSelected()) {
            wWafflesValue = (Integer) wWafflesQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + wWaffles.getText() + " ---------- " + wWafflesValue + "\n");
        }
        if (beverageComboBox1.getSelectedIndex() > -1) {
            String beverageComboBox1Text = beverageComboBox1.getSelectedItem().toString();
            beverageValue = (Integer) beverageQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n " + beverageComboBox1Text + " ----------------------------- " + beverageValue + "\n");
        }

        //        ================================================================
        //          Lunch
        if (fishCBox.isSelected()) {
            fishCBoxValue = (Integer) fishQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + fishCBox.getText() + " ---------------------------- " + fishCBoxValue + "\n");
        }
        if (chickenCBox.isSelected()) {
            chickenCBoxValue = (Integer) chickenQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + chickenCBox.getText() + " ----------------------- " + chickenCBoxValue + "\n");
        }
        if (goatMeatCBox.isSelected()) {
            goatMeatCBoxValue = (Integer) goatMeatQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + goatMeatCBox.getText() + " -------------------- " + goatMeatCBoxValue + "\n");
        }
        if (cassavaCBox.isSelected()) {
            cassavaCBoxValue = (Integer) cassavaQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + cassavaCBox.getText() + " ----------------------- " + cassavaCBoxValue + "\n");
        }
        if (katogoCBox.isSelected()) {
            katogoCBoxValue = (Integer) katogoQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + katogoCBox.getText() + " -------------------------- " + katogoCBoxValue + "\n");
        }
        if (lunchAltCBox.getSelectedIndex() > -1) {
            String lunchAltCBoxText = lunchAltCBox.getSelectedItem().toString();
            lunchAltQtyValue = (Integer) lunchAltQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n " + lunchAltCBoxText + " --------------------------- " + lunchAltQtyValue + "\n");
        }
        //        ==============================================================================
        //            Dinner
        if (matookeCBox.isSelected()) {
            matookeCBoxValue = (Integer) matookeQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + matookeCBox.getText() + " ----------------------- " + matookeCBoxValue + "\n");
        }
        if (beansCBox.isSelected()) {
            beansCBoxValue = (Integer) beansQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + beansCBox.getText() + " ------------------------ " + beansCBoxValue + "\n");
        }
        if (yamsCBox.isSelected()) {
            yamsCBoxValue = (Integer) yamsQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + yamsCBox.getText() + " ------------------------------ " + beansCBoxValue + "\n");
        }

        if (kivuuvCBox.isSelected()) {
            kivuuvCBoxValue = (Integer) kivuuvCBoxQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + kivuuvCBox.getText() + " -------------------------- " + kivuuvCBoxValue + "\n");
        }
        if (muttonRad.isSelected()) {
            muttonRadValue = (Integer) muttonRadQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + muttonRad.getText() + " -------------------------- " + muttonRadValue + "\n");
        }
        if (passionJuiceRad.isSelected()) {
            passionJuiceRadValue = (Integer) passionJuiceRadQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + passionJuiceRad.getText() + " -------------------------- " + passionJuiceRadValue + "\n");
        }
        if (waterRad.isSelected()) {
            waterRadValue = (Integer) waterRadValueQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + waterRad.getText() + " -------------------------- " + waterRadValue + "\n");
        }

        //        ========================================================================================================
        //          Evening Tea
        if (muffinsCBox.isSelected()) {
            muffinsCBoxValue = (Integer) muffinsQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + muffinsCBox.getText() + " -------------------------- " + muffinsCBoxValue + "\n");
        }
        if (croissantsCBox.isSelected()) {
            croissantsCBoxValue = (Integer) croissantsQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + croissantsCBox.getText() + " -------------------------- " + croissantsCBoxValue + "\n");
        }
        if (bitsBitesCBox.isSelected()) {
            bitsBitesCBoxValue = (Integer) bitsBitesQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + bitsBitesCBox.getText() + " -------------------------- " + bitsBitesCBoxValue + "\n");
        }
        if (pastaCBox.isSelected()) {
            pastaCBoxValue = (Integer) pastaQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + pastaCBox.getText() + " -------------------------- " + pastaCBoxValue + "\n");
        }
        if (chipsRad.isSelected()) {
            chipsRadValue = (Integer) chipsQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + chipsRad.getText() + " -------------------------- " + chipsRadValue + "\n");
        }
        if (curriesRad.isSelected()) {
            curriesRadValue = (Integer) curriesQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + curriesRad.getText() + " -------------------------- " + curriesRadValue + "\n");
        }
        if (pizzaRad.isSelected()) {
            pizzaRadValue = (Integer) pizzaQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + pizzaRad.getText() + " -------------------------- " + pizzaRadValue + "\n");
        }
        if (passionJuiceRad1.isSelected()) {
            passionJuiceValue = (Integer) passionJuiceQty1.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + passionJuiceRad1.getText() + " -------------------------- " + passionJuiceValue + "\n");
        }
        if (waterRad1.isSelected()) {
            waterRad1Value = (Integer) waterQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + waterRad1.getText() + " -------------------------- " + waterRad1Value + "\n");
        }

        //     ==========================================================================================================
        //                            DESSERT ORDER
        if (panCakeCBox.isSelected()) {
            pancakeValue = (Integer) pancakeQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + panCakeCBox.getText() + " --------------------- " + pancakeValue + "\n");
        }
        if (cupCakeCBox.isSelected()) {
            cupCakeValue = (Integer) cupCakeQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + cupCakeCBox.getText() + " ----------------------- " + cupCakeValue + "\n");
        }
        if (fCassavaRad.isSelected()) {
            fCassavaValue = (Integer) fCassavaQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + fCassavaRad.getText() + " ----------------------- " + fCassavaValue + "\n");
        }
        if (chispRad.isSelected()) {
            chispRadValue = (Integer) chispRadQty.getValue();
            recieptArea.setText(recieptArea.getText() + "\n" + chispRad.getText() + " -------------------------- " + chispRadValue + "\n");

        }
        if (pack.isSelected()) {
            
            recieptArea.setText(recieptArea.getText() + "\n " + pack.getText() + "\n");

        }

    }//GEN-LAST:event_placeOderActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new BillingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner bComboQTY;
    private javax.swing.JCheckBox beansCBox;
    private javax.swing.JSpinner beansQty;
    private javax.swing.JComboBox<String> beverageComboBox1;
    private javax.swing.JSpinner beverageQty;
    private javax.swing.JCheckBox bitsBitesCBox;
    private javax.swing.JSpinner bitsBitesQty;
    private javax.swing.JCheckBox breakfastComboCK;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calculateBill;
    private javax.swing.JCheckBox cassavaCBox;
    private javax.swing.JSpinner cassavaQty;
    private javax.swing.JCheckBox chickenCBox;
    private javax.swing.JSpinner chickenQty;
    private javax.swing.JSpinner chipsQty;
    private javax.swing.JRadioButton chipsRad;
    private javax.swing.JRadioButton chispRad;
    private javax.swing.JSpinner chispRadQty;
    private javax.swing.JCheckBox croissantsCBox;
    private javax.swing.JSpinner croissantsQty;
    private javax.swing.JCheckBox cupCakeCBox;
    private javax.swing.JSpinner cupCakeQty;
    private javax.swing.JSpinner curriesQty;
    private javax.swing.JRadioButton curriesRad;
    private javax.swing.JSpinner dOmeleteQTY;
    private javax.swing.JCheckBox designOmelettesCk;
    private javax.swing.JButton exitbtn;
    private javax.swing.JSpinner fCassavaQty;
    private javax.swing.JRadioButton fCassavaRad;
    private javax.swing.JSpinner fMorningQTY;
    private javax.swing.JSpinner fPancakesQTY;
    private javax.swing.JCheckBox fishCBox;
    private javax.swing.JSpinner fishQty;
    private javax.swing.JCheckBox fluffyCk;
    private javax.swing.JCheckBox fruitMorningCk;
    private javax.swing.JCheckBox goatMeatCBox;
    private javax.swing.JSpinner goatMeatQty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox katogoCBox;
    private javax.swing.JSpinner katogoQty;
    private javax.swing.JCheckBox kivuuvCBox;
    private javax.swing.JSpinner kivuuvCBoxQty;
    private javax.swing.JComboBox<String> lunchAltCBox;
    private javax.swing.JSpinner lunchAltQty;
    private javax.swing.JCheckBox matookeCBox;
    private javax.swing.JSpinner matookeQty;
    private javax.swing.JCheckBox muffinsCBox;
    private javax.swing.JSpinner muffinsQty;
    private javax.swing.JRadioButton muttonRad;
    private javax.swing.JSpinner muttonRadQty;
    private javax.swing.JCheckBox pack;
    private javax.swing.JCheckBox panCakeCBox;
    private javax.swing.JSpinner pancakeQty;
    private javax.swing.JSpinner passionJuiceQty1;
    private javax.swing.JRadioButton passionJuiceRad;
    private javax.swing.JRadioButton passionJuiceRad1;
    private javax.swing.JSpinner passionJuiceRadQty;
    private javax.swing.JCheckBox pastaCBox;
    private javax.swing.JSpinner pastaQty;
    private javax.swing.JSpinner pizzaQty;
    private javax.swing.JRadioButton pizzaRad;
    private javax.swing.JButton placeOder;
    private javax.swing.JTextArea recieptArea;
    private javax.swing.JButton reset;
    private javax.swing.JTextField totalBillPrint;
    private javax.swing.JCheckBox wWaffles;
    private javax.swing.JSpinner wWafflesQty;
    private javax.swing.JSpinner waterQty;
    private javax.swing.JRadioButton waterRad;
    private javax.swing.JRadioButton waterRad1;
    private javax.swing.JSpinner waterRadValueQty;
    private javax.swing.JCheckBox yamsCBox;
    private javax.swing.JSpinner yamsQty;
    // End of variables declaration//GEN-END:variables
}
